

two pointer variable : 
-----------------------------------------------------
1 2 3 4 5 

odd number 
even number 


public class Main {
    public static void main(String[] args) {
        int[] arr = {1, 2, 3, 4, 5};
        int left = 0; 
        int right = arr.length - 1;  
        
        int[] result = new int[arr.length];  
        int evenPointer = 0;
        int oddPointer = arr.length - 1; 
        
        while (left <= right) {
            if (arr[left] % 2 == 0) {
                result[evenPointer++] = arr[left];
            } else {
                result[oddPointer--] = arr[left];
            }
            left++;
        }
        
        System.out.println("Even Numbers first, Odd Numbers next:");
        for (int num : result) {
            System.out.print(num + " ");
        }
    }
}

------------------------------------------------
{10, 11, 12, 13, 14}
even number 
odd number 

public class Main {
    public static void main(String[] args) {
        int[] arr = {10, 11, 12, 13, 14};  
        
        int left = 0;
        int right = arr.length - 1;
        int[] result = new int[arr.length];
        
        int evenPointer = 0;
        int oddPointer = arr.length - 1;
        
        while (left <= right) {
            if (arr[left] % 2 == 0) {
                result[evenPointer++] = arr[left];  
            } else {
                result[oddPointer--] = arr[left];  
            }
            left++;
        }
        
        System.out.println("Even Numbers first, Odd Numbers next:");
        for (int num : result) {
            System.out.print(num + " ");
        }
    }
}

------------------------------------------------
user input : 
Armstrong number prime number 


import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] arr = {153, 371, 7, 23};  
        
        int left = 0;
        int right = arr.length - 1;
        while (left <= right) {
            if (isArmstrong(arr[left])) {
                System.out.println(arr[left] + " is an Armstrong number");
            } else {
                System.out.println(arr[left] + " is not an Armstrong number");
            }
            
            if (isPrime(arr[right])) {
                System.out.println(arr[right] + " is a Prime number");
            } else {
                System.out.println(arr[right] + " is not a Prime number");
            }
            
            left++;
            right--;
        }
    }

    public static boolean IsArmstrong(int num) {
        int sum = 0, temp = num, digits = String.valueOf(num).length();
        while (temp != 0) {
            int remainder = temp % 10;
            sum += Math.pow(remainder, digits);
            temp /= 10;
        }
        return sum == num;
    }

    public static boolean IsPrime(int num) {
        if (num <= 1) return false;
        for (int i = 2; i <= num / 2; i++) {
            if (num % i == 0) return false;
        }
        return true;
    }
}


------------------------------------------------
user input binary number :

zero then one 

one then zero


import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter a binary number: ");
        String binary = sc.nextLine();
        
        int left = 0, right = binary.length() - 1;
        char[] result = new char[binary.length()];
        int zeroPointer = 0, onePointer = binary.length() - 1;
        
        while (left <= right) {
            if (binary.charAt(left) == '0') {
                result[zeroPointer++] = '0';
            } else {
                result[onePointer--] = '1';
            }
            left++;
        }
        
        System.out.println("Zeros first, then ones:");
        for (int i = 0; i < zeroPointer; i++) {
            System.out.print(result[i] + " ");
        }
        for (int i = binary.length() - 1; i > onePointer; i--) {
            System.out.print(result[i] + " ");
        }
    }
}

-----------------------------------------------------
zero one two 

two one zero 


public class Main {
    public static void main(String[] args) {
        int[] arr = {0, 1, 2};
        
        int left = 0, right = arr.length - 1;
        System.out.println("Ascending Order:");
        while (left <= right) {
            System.out.print(arr[left++] + " ");
        }
        
        System.out.println("\nDescending Order:");
        left = 0;  
        while (right >= left) {
            System.out.print(arr[right--] + " ");
        }
    }
}

-------------------------------------------------------
 

user number :
positive and negative and zero 

3,-2,9,-4,5,0 


import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        int[] arr = {3, -2, 9, -4, 5, 0};
        int[] result = new int[arr.length];
        int posPointer = 0;
        int negPointer = arr.length - 1;
        
        
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] > 0) {
                result[posPointer++] = arr[i];
            } else if (arr[i] < 0) {
                result[negPointer--] = arr[i];
            }
        }
        
        System.out.println("Positive Numbers:");
        for (int i = 0; i < posPointer; i++) {
            System.out.print(result[i] + " ");
        }

        System.out.println("Negative Numbers:");
        for (int i = arr.length - 1; i > negPointer; i--) {
            System.out.print(result[i] + " ");
        }

        System.out.println("Squares of numbers:");
        for (int num : arr) {
            System.out.print(num * num + " ");
        }

        Arrays.sort(arr);
        System.out.println("Sorted array:");
        for (int num : arr) {
            System.out.print(num + " ");
        }

        System.out.println("User-defined operation (multiply by 2):");
        for (int num : arr) {
            System.out.print(num * 2 + " ");
        }
    }
}


square 
sort 
userdefine 
-------------------------------------------------------